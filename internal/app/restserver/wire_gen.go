// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package restserver

import (
	"github.com/burhanwakhid/shopifyx_backend/config"
	"github.com/burhanwakhid/shopifyx_backend/internal/app/provider"
	"github.com/burhanwakhid/shopifyx_backend/internal/delivery/rest/handler"
	"github.com/burhanwakhid/shopifyx_backend/internal/repository/auth"
	"github.com/burhanwakhid/shopifyx_backend/internal/repository/bank"
	"github.com/burhanwakhid/shopifyx_backend/internal/repository/product"
	"github.com/burhanwakhid/shopifyx_backend/internal/service/auth"
	"github.com/burhanwakhid/shopifyx_backend/internal/service/bank"
	"github.com/burhanwakhid/shopifyx_backend/internal/service/image"
	"github.com/burhanwakhid/shopifyx_backend/internal/service/product"
)

// Injectors from wire.go:

func InitServer(cfg *config.Config) *Server {
	dbConfig := config.GetDBConfig()
	replication := provider.ProvideDBReplication(dbConfig)
	repository := auth.NewUserRepository(replication)
	service := authService.NewAuthService(repository)
	appConfig := config.GetAppConfig()
	translatorConfig := appConfig.TranslatorConfig
	errorTranslator := provider.ProvideErrorTranslator(translatorConfig)
	jsonValidator := provider.ProviderValidator()
	authHandler := provider.ProviderAuthHandler(service, errorTranslator, jsonValidator)
	bankRepository := bank.NewBankRepository(replication)
	bankServiceBankService := bankService.NewBankService(bankRepository)
	bankHandler := handler.NewBankHandler(bankServiceBankService, errorTranslator, jsonValidator)
	productRepository := product.NewProductRepository(replication)
	productServiceProductService := productService.NewProductService(productRepository)
	productHandler := handler.NewProductHandler(productServiceProductService, errorTranslator, jsonValidator)
	imageServiceImageService := imageService.NewImageService()
	imageHandler := handler.NewImageHandler(imageServiceImageService, errorTranslator, jsonValidator)
	handlerContainer := handler.NewHandlerContainer(authHandler, bankHandler, productHandler, imageHandler)
	server := NewServer(cfg, handlerContainer)
	return server
}
